{"version":3,"file":"SelectProvider.js","sourceRoot":"","sources":["SelectProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAuBlE,MAAM,CAAC,MAAM,aAAa,GAAG,aAAa,CAAQ;IAC9C,KAAK,EAAE,IAAI;IACX,iBAAiB,EAAE,QAAQ,CAAC,EAAE;QAC1B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;IACD,gBAAgB,EAAE,IAAI;IACtB,iBAAiB,EAAE,IAAI;IACvB,UAAU,EAAE,SAAS;CACxB,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,gBAAgB,GAAG,GAAU,EAAE;IACxC,OAAO,UAAU,CAAC,aAAa,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,MAAM,cAAc,GAAoB,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC1F,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,EAAE;QACvB,OAAO;YACH,KAAK;YACL,iBAAiB;YACjB,gBAAgB,EACZ,SAAS,IAAI,OAAO,SAAS,CAAC,gBAAgB,KAAK,UAAU;gBACzD,CAAC,CAAC,SAAS,CAAC,gBAAgB;gBAC5B,CAAC,CAAC,IAAI;YACd,iBAAiB,EACb,SAAS,IAAI,OAAO,SAAS,CAAC,iBAAiB,KAAK,UAAU;gBAC1D,CAAC,CAAC,SAAS,CAAC,iBAAiB;gBAC7B,CAAC,CAAC,IAAI;YACd,UAAU,EAAE,SAAS,EAAE,UAAU,IAAI,SAAS;SACjD,CAAC;IACN,CAAC,EAAE,CAAC,iBAAiB,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IAE1C,OAAO,oBAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,IAAG,QAAQ,CAA0B,CAAC;AACrF,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import React, { createContext, useContext, useMemo } from \"react\";\n\nimport { ClassNames, GroupOption, Option } from \"./type\";\n\ninterface Store {\n    value: Option | Option[] | null;\n    handleValueChange: (selected: Option) => void;\n    formatGroupLabel: ((data: GroupOption) => JSX.Element) | null;\n    formatOptionLabel: ((data: Option) => JSX.Element) | null;\n    classNames?: ClassNames;\n}\n\ninterface Props {\n    value: Option | Option[] | null;\n    handleValueChange: (selected: Option) => void;\n    children: JSX.Element;\n    otherData: {\n        formatGroupLabel: ((data: GroupOption) => JSX.Element) | null;\n        formatOptionLabel: ((data: Option) => JSX.Element) | null;\n        classNames?: ClassNames;\n    };\n}\n\nexport const SelectContext = createContext<Store>({\n    value: null,\n    handleValueChange: selected => {\n        console.log(\"selected:\", selected);\n    },\n    formatGroupLabel: null,\n    formatOptionLabel: null,\n    classNames: undefined\n});\n\nexport const useSelectContext = (): Store => {\n    return useContext(SelectContext);\n};\n\nconst SelectProvider: React.FC<Props> = ({ value, handleValueChange, otherData, children }) => {\n    const store = useMemo(() => {\n        return {\n            value,\n            handleValueChange,\n            formatGroupLabel:\n                otherData && typeof otherData.formatGroupLabel === \"function\"\n                    ? otherData.formatGroupLabel\n                    : null,\n            formatOptionLabel:\n                otherData && typeof otherData.formatOptionLabel === \"function\"\n                    ? otherData.formatOptionLabel\n                    : null,\n            classNames: otherData?.classNames || undefined\n        };\n    }, [handleValueChange, otherData, value]);\n\n    return <SelectContext.Provider value={store}>{children}</SelectContext.Provider>;\n};\n\nexport default SelectProvider;\n"]}