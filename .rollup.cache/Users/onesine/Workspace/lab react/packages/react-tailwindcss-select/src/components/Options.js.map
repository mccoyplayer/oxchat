{"version":3,"file":"Options.js","sourceRoot":"","sources":["Options.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useMemo } from \"react\";\n\nimport { DEFAULT_THEME } from \"../constants\";\n\nimport DisabledItem from \"./DisabledItem\";\nimport GroupItem from \"./GroupItem\";\nimport Item from \"./Item\";\nimport { SelectContext } from \"./SelectProvider\";\nimport { Option, Options as ListOption } from \"./type\";\n\ninterface OptionsProps {\n    list: ListOption;\n    noOptionsMessage: string;\n    text: string;\n    isMultiple: boolean;\n    value: Option | Option[] | null;\n    primaryColor: string;\n}\n\nconst Options: React.FC<OptionsProps> = ({\n    list,\n    noOptionsMessage,\n    text,\n    isMultiple,\n    value,\n    primaryColor = DEFAULT_THEME\n}) => {\n    const { classNames } = useContext(SelectContext);\n    const filterByText = useCallback(() => {\n        const filterItem = (item: Option) => {\n            return item.label.toLowerCase().indexOf(text.toLowerCase()) > -1;\n        };\n\n        let result = list.map(item => {\n            if (\"options\" in item) {\n                return {\n                    label: item.label,\n                    options: item.options.filter(filterItem)\n                };\n            }\n            return item;\n        });\n\n        result = result.filter(item => {\n            if (\"options\" in item) {\n                return item.options.length > 0;\n            }\n            return filterItem(item);\n        });\n\n        return result;\n    }, [text, list]);\n\n    const removeValues = useCallback(\n        (array: ListOption) => {\n            if (!isMultiple) {\n                return array;\n            }\n\n            if (Array.isArray(value)) {\n                const valueId = value.map(item => item.value);\n\n                const filterItem = (item: Option) => !valueId.includes(item.value);\n\n                let newArray = array.map(item => {\n                    if (\"options\" in item) {\n                        return {\n                            label: item.label,\n                            options: item.options.filter(filterItem)\n                        };\n                    }\n                    return item;\n                });\n\n                newArray = newArray.filter(item => {\n                    if (\"options\" in item) {\n                        return item.options.length > 0;\n                    } else {\n                        return filterItem(item);\n                    }\n                });\n\n                return newArray;\n            }\n            return array;\n        },\n        [isMultiple, value]\n    );\n\n    const filterResult = useMemo(() => {\n        return removeValues(filterByText());\n    }, [filterByText, removeValues]);\n\n    return (\n        <div\n            role=\"options\"\n            className={classNames && classNames.list ? classNames.list : \"max-h-72 overflow-y-auto\"}\n        >\n            {filterResult.map((item, index) => (\n                <React.Fragment key={index}>\n                    {\"options\" in item ? (\n                        <>\n                            <div className=\"px-2.5\">\n                                <GroupItem\n                                    primaryColor={primaryColor || DEFAULT_THEME}\n                                    item={item}\n                                />\n                            </div>\n\n                            {index + 1 < filterResult.length && <hr className=\"my-1\" />}\n                        </>\n                    ) : (\n                        <div className=\"px-2.5\">\n                            <Item primaryColor={primaryColor || DEFAULT_THEME} item={item} />\n                        </div>\n                    )}\n                </React.Fragment>\n            ))}\n\n            {filterResult.length === 0 && <DisabledItem>{noOptionsMessage}</DisabledItem>}\n        </div>\n    );\n};\n\nexport default Options;\n"]}